name: 'publish'
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false


  build-python-executable:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 

      - name: Install dependencies
        run: pip install -r requirements.txt 

      - name: Build executable
        run: pyinstaller --onefile remote-server/server.py

      # - name: Upload executable as artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: server-executable
      #     path: dist/server

      # - name: Download server executable
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: server-executable
      #     path: dist/server

      - name: Make executable (Unix-based platforms)
        if: startsWith(matrix.platform, 'ubuntu') || startsWith(matrix.platform, 'macos')
        run: chmod +x dist/server

      # - name: Make executable (Windows)
      #   if: matrix.platform == 'windows-latest'
      #   run: |
      #     Rename-Item -Path dist/server/server -NewName server.exe

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/server  # Add the path to your executable
          tag_name: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          draft: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executables
        id: upload_executables
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/server
          asset_name: server-${{ matrix.platform }}  # Customize the asset name
          asset_content_type: application/octet-stream