body,
html {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}

body {
  display: flex;
}

#canvas_container {
  flex: 3;
  border: 1px solid #000;
  position: relative;
  width: 100%;
  height: 100%;
}

canvas {
  position: absolute; /* Use absolute positioning for the canvas elements */
  top: 0; /* Stack the canvas elements from the top */
  left: 0; /* Align the canvas elements to the left */
  width: 100%; /* Set the width to 100% of the container */
  height: 100%; /* Set the height to 100% of the container */
  /* border: 5px solid #ccc; Optional: Add a border to visually separate the canvas elements */
}
#sidebar {
  flex: 1;
  background-color: #f0f0f0;
  /* scrollbar */
  overflow-y: auto;
  /* Padding is the space between the content of an element and its border. 
      In this case, the padding is applied on all sides of the element. */
  padding: 10px;
  user-select: none; /* Standard syntax */
}

.button-group {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 10px;
}
.button-group button {
  margin-left: 10px;
}
.checkbox-group {
  display: flex;
  margin-bottom: 10px;
}
.checkbox-group label {
  margin-right: 10px;
}
.checkbox-group-select-all{
  display: flex;
  margin-bottom: 10px;
  margin-right: 5px;
  justify-content: flex-end;
}
.checkbox-group-select-all input {
  margin-right: 10px;
}

.card-container {
  display: flex;
  flex-direction: column;
}
.card {
  border: 1px solid #ccc;
  /* rounds the corners of the element */
  border-radius: 4px;
  /* a margin of 10 pixels at the bottom of the element. 
      It creates spacing between this element and any elements below it. */
  margin-bottom: 10px;
  padding: 5px;
  /* changes the cursor to a pointer when hovering over the element. 
      It indicates to the user that the element is clickable or interactive. */
  cursor: pointer;
  display: flex;
  flex-direction: column;
  /* the position: relative; property is applied to the .card class. 
      This means that any child elements within an element that has the .card class 
      can be positioned relative to the .card element using the positioning properties 
      top, bottom, left, or right. */
  /* position based on other children */
  position: relative;
}
.card-title {
  font-weight: bold;
  font-size: 18px;
  margin-bottom: 10px;
}

.card-info {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 5px;
}

.card-info-item {
  margin-right: 20px;
}

.card-info-item label {
  font-weight: bold;
}

.delete-button {
  /* position based on ancestor and not other children */
  position: absolute;
  top: 5px;
  right: 5px;
  cursor: pointer;
}

.card-checkbox {
  position: absolute;
  top: 5px;
  right: 30px;
}
